---
# tasks file for common

- name: Create group for non root user
  ansible.builtin.group:
    name: "{{ common_user_group }}"
    gid: "{{ common_gid }}"
    state: present

- name: Create non root user
  ansible.builtin.user:
    name: "{{ common_user_name }}"
    password: "*"
    uid: "{{ common_uid }}"
    home: "/home/{{ common_user_name }}"
    shell: /bin/bash
    group: "{{ common_user_group }}"
    groups: "{{ common_user_group }},sudo"
    append: true

# User's password is disabled, so wouldn't be able to use sudo with a password
- name: Allow passwordless sudo for non root user
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: "{{ common_user_name }}  ALL=(ALL) NOPASSWD: ALL"
    validate: /usr/sbin/visudo -cf %s

- name: Add ssh key to authorized_keys
  ansible.posix.authorized_key:
    key: "{{ lookup('file', '{{ common_ssh_pubkey_path }}') }}"
    user: "{{ common_user_name }}"
    state: present

- name: Make sure ssh directory and its contents have proper permissions
  ansible.builtin.file:
    path: "/home/{{ common_user_name }}/.ssh"
    mode: "0700"
    owner: "{{ common_user_name }}"
    group: "{{ common_user_group }}"
    recurse: true

- name: Harden ssh configuration
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^{{ item.name }} "
    line: "{{ item.name }} {{ item.value }}"
    validate: '/usr/sbin/sshd -t -f %s'
  loop: "{{ common_ssh_conf_list }}"
  notify: Restart ssh

- name: Install packages
  ansible.builtin.apt:
    name: "{{ common_package_list }}"
    state: present
    update_cache: true
    cache_valid_time: 120
  register: result
  until: result is successful
  retries: 12
  delay: 5

- name: Allow ssh access in ufw
  community.general.ufw:
    rule: allow
    port: ssh
    state: enabled

- name: Ensure that persistent volume dir exists
  ansible.builtin.file:
    name: "{{ common_volume_path }}"
    state: directory

- name: Mount persistent volume
  ansible.posix.mount:
    path: "{{ common_volume_path }}"
    src: "/dev/disk/by-id/scsi-0DO_Volume_{{ common_volume_name }}"
    fstype: "{{ common_volume_fstype }}"
    opts: discard,defaults,noatime
    state: mounted

- name: Create the swap file
  community.general.filesize:
    path: "{{ common_swap_file_path }}"
    size: "{{ common_swap_file_size }}"
  register: swap_file_create

- name: Set permissions on swap file
  ansible.builtin.file:
    path: "{{ common_swap_file_path }}"
    owner: root
    group: root
    mode: "0600"

- name: Make swap file if necessary.
  ansible.builtin.command: mkswap {{ common_swap_file_path }}
  when: swap_file_create is changed
  register: mkswap_result

- name: Run swapon on the swap file.
  ansible.builtin.command: swapon {{ common_swap_file_path }}
  when:
    - mkswap_result is changed

- name: Add fstab entry for swap file
  ansible.posix.mount:
    path: none
    src: "{{ common_swap_file_path }}"
    fstype: swap
    opts: sw
    state: present # Ansible does not currently allow to use mounted with swap
