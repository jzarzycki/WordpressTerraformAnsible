---
# tasks file for webserver

- name: Allow http & https access in ufw
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    state: enabled
  loop: "{{ webserver_open_ports }}"

- name: Create the directory for app config
  ansible.builtin.file:
    path: "{{ webserver_docker_compose_dir }}"
    state: directory
    mode: '0700'
    owner: docker
    group: docker

- name: Create docker volume directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: docker
    group: docker
  loop: "{{ webserver_docker_volumes }}"

- name: Copy over config files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0700'
    owner: docker
    group: docker
  loop: "{{ webserver_config_files }}"
  notify: Run docker compose

- name: Copy over config templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0700'
    owner: docker
    group: docker
  loop: "{{ webserver_config_templates }}"
  notify: Run docker compose

- name: Install certbot
  ansible.builtin.apt:
    name: certbot
    state: present
    update_cache: true
    cache_valid_time: 120
  # circumvents a race condition with ubuntu unattended-upgrade
  register: result
  until: result is successful
  retries: 12
  delay: 10

# This task requires port 80 to be open, shouldn't be a problem as it
# normally only runs once and then ssl renewals use a different method
- name: Create SSL certificate if none is present
  ansible.builtin.command:
    argv: "{{ webserver_ssl_create_job }}"
  args:
    creates: "{{ webserver_persistent_volume }}/letsencrypt/live/{{ webserver_website_url }}/"
  when: webserver_cert_type == "certbot"

- name: Create directory for self signed certificate
  ansible.builtin.file:
    name: "{{ webserver_persistent_volume }}/letsencrypt/live/{{ webserver_website_url }}/"
    state: directory
  when: webserver_cert_type == "self_signed"

- name: Create SSL self-signed cert config file
  ansible.builtin.template:
    src: openssl.conf.j2
    dest: "{{ webserver_persistent_volume }}/openssl.conf"
  when: webserver_cert_type == "self_signed"

- name: Create SSL self-signed certificate
  ansible.builtin.command:
    argv: "{{ webserver_ssl_self_signed_job }}"
  args:
    creates: "{{ webserver_persistent_volume }}/letsencrypt/live/{{ webserver_website_url }}/{fullchain,privkey}.pem"
  when: webserver_cert_type == "self_signed"

- name: Create webroot directory for certificate renewal
  ansible.builtin.file:
    name: "{{ webserver_ssl_webroot_dir }}"
    state: directory

- name: Add automatic SSL certificate renewal to cron
  ansible.builtin.cron:
    name: "renew ssl certs"
    minute: 0
    hour: 12
    day: "*"
    month: "*"
    weekday: "*"
    job: "{{ webserver_ssl_renew_job }}"
